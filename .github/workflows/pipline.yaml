name: Python CI/CD Pipeline

on:
  push:
    branches:
  pull_request:
    branches:
      - main 
  workflow_dispatch: 
    inputs:
      run_lint:
        description: 'Run linting checks?'
        required: false
        default: 'true'
        type: boolean
      run_tests:
        description: 'Run pytest tests?'
        required: false
        default: 'true'
        type: boolean

permissions:
  checks: write
  contents: write

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_lint == 'true' }} 

    strategy:
      matrix:
        python-version:
          - ${{ '3.13' }} 

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-pip-

      - name: Install dependencies (for linting)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff 

      - name: Run Lint Checks (Ruff)
        run: |
          ruff check .
# ruff format . --check 


  test:
    name: Run Pytest Tests
    runs-on: ubuntu-latest
    needs: lint
    if: ${{ (github.event_name != 'workflow_dispatch' || github.event.inputs.run_tests == 'true') && always() }}

    strategy:
      matrix:
        python-version:
          - ${{ '3.13' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-pip-

      - name: Install dependencies (for tests)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest==8.4.1 pytest-asyncio==0.25.3

      - name: Run pytest
        run: |
          TEST_PATH="."
          echo "Running pytest in path: $TEST_PATH"
          pytest --maxfail=1 --disable-warnings -q "$TEST_PATH"




# pip install pytest pytest-cov for code coverage
# pytest --cov=. --cov-report=xml "$TEST_PATH"
# - name: Upload coverage to Codecov
#   uses: codecov/codecov-action@v4
#   with:
#     token: ${{ secrets.CODECOV_TOKEN }} 
